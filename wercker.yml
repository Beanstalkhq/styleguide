box:
    id: canopytax/static-core
    tag: latest
build:
    steps:
        - script:
            name: npm setup
            code: |
                echo '//npm.canopytax.com/:_authToken="xrWFRKpQUST+6no1HCmddV8mVbGVEOGEWB3NQZKMXPc="' > ~/.npmrc
                npm set registry http://npm.canopytax.com
        - script:
            name: npm install
            code: |
                npm install
        - script:
            name: create sofe bundle
            code: |
                npm run sofe
        - script:
            name: copy output to wercker
            code: |
                git describe
                mkdir -p "$WERCKER_OUTPUT_DIR/build/$(git describe)/"
                cp --recursive build/* "$WERCKER_OUTPUT_DIR/build/$(git describe)/"
                mkdir -p "$WERCKER_OUTPUT_DIR/bin"
                cp --recursive bin/* "$WERCKER_OUTPUT_DIR/bin/"
                mkdir -p "$WERCKER_OUTPUT_DIR/node_modules"
                cp --recursive node_modules/replace "$WERCKER_OUTPUT_DIR/node_modules/"
                git describe > "$WERCKER_OUTPUT_DIR/build/version.txt"
    after-steps:
        - slack-notifier:
            url: $SLACK_URL
            channel: dev-camp
            username: canopybot
            notify_on: "failed"
deploy:
    steps:
        - script:
            name: fix urls
            code: npm install replace && ./bin/replace "$(cat build/version.txt)" $AWS_BUCKET
        - canopytax/deploy-sofe-service:
            sofe_service_name: 'canopy-styleguide.css'
            upload_dir: build
            main_file: 'styleguide-global.js' # example toast-service.js
            s3_access_key: $AWS_ACCESS_KEY
            s3_secret_key: $AWS_SECRET
            s3_location: $AWS_BUCKET/sofe/canopy-styleguide
            deplanifester_url: 'https://deplanifester.canopy.ninja'
            deplanifester_env: $DEPLANIFESTER_ENV
            deplanifester_username: $DEPLANIFESTER_USERNAME
            deplanifester_password: $DEPLANIFESTER_PASSWORD
